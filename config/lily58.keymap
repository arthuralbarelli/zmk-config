/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    macros {
        single_quote: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "NEW_MACRO";
        };

        double_quotes: double_quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp SPACE>;
            label = "DOUBLE_QUOTES";
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <32 33>;
            layers = <0 1>;
        };

        dt_dab {
            bindings = <&kp TAB>;
            key-positions = <27 26>;
            layers = <0 1>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
            layers = <0 1>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <21 22>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&none  &none               &none           &none             &none  &none                                     &none  &none  &none              &none                &none                 &none
&kp Q  &kp W               &kp E           &kp R             &kp T  &none                                     &none  &kp Y  &kp U              &kp I                &kp O                 &kp P
&kp A  &hm LEFT_CONTROL S  &hm LEFT_ALT D  &hm LEFT_SHIFT F  &kp G  &none                                     &none  &kp H  &hm RIGHT_SHIFT J  &hm RIGHT_ALT K      &hm RCTRL L           &kp COLON
&kp Z  &hm LEFT_GUI X      &hm LEFT_GUI C  &hm LEFT_GUI V    &kp B  &none        &none             &none      &none  &kp N  &hm RIGHT_GUI M    &hm RIGHT_GUI COMMA  &hm RIGHT_GUI PERIOD  &kp SLASH
                                           &none             &none  &lt 2 SPACE  &kp LEFT_SHIFT    &kp RCTRL  &to 1  &none  &none
            >;
        };

        symbols {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans        &trans                     &trans                     &trans                      &trans        &trans                                 &trans  &trans        &trans                    &trans                     &trans                &trans
&kp EXCL      &kp AT_SIGN                &kp HASH                   &kp DOLLAR                  &kp PERCENT   &trans                                 &trans  &kp CARET     &kp AMPERSAND             &kp ASTRK                  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1  &hm LEFT_CONTROL NUMBER_2  &hm LEFT_ALT NUMBER_3      &hm LEFT_SHIFT NUMBER_4     &kp NUMBER_5  &trans                                 &trans  &kp NUMBER_6  &hm NUMBER_7 RIGHT_SHIFT  &hm RIGHT_ALT NUMBER_8     &hm RCTRL NUMBER_9    &kp NUMBER_0
&kp TILDE     &hm LEFT_GUI UNDER         &hm LEFT_GUI LEFT_BRACKET  &hm LEFT_GUI RIGHT_BRACKET  &kp EQUAL     &trans  &trans          &trans         &trans  &kp PLUS      &hm RIGHT_GUI LEFT_BRACE  &hm RIGHT_GUI RIGHT_BRACE  &hm RIGHT_GUI MINUS   &kp GRAVE
                                                                    &trans                      &trans        &to 0   &kp LEFT_ALT    &kp RIGHT_GUI  &to 3   &trans        &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans         &trans     &trans  &trans                                 &trans  &trans    &trans                  &trans             &trans     &trans
&none   &none   &none          &none      &none   &trans                                 &trans  &none     &kp RG(RA(LEFT_ARROW))  &kp RG(RA(RIGHT))  &none      &none
&trans  &none   &kp BACKSPACE  &kp ENTER  &none   &trans                                 &trans  &kp LEFT  &kp DOWN_ARROW          &kp UP_ARROW       &kp RIGHT  &none
&trans  &none   &kp LG(C)      &kp LG(V)  &none   &trans  &trans          &trans         &trans  &none     &none                   &none              &none      &to 4
                               &trans     &trans  &trans  &kp LEFT_ALT    &kp RIGHT_GUI  &to 1   &trans    &trans
            >;
        };

        macros {
            bindings = <
&trans  &trans  &trans         &trans          &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans         &trans          &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &single_quote  &double_quotes  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans         &trans          &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans          &trans  &to 0   &trans    &trans  &trans  &trans  &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans      &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans      &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &bt BT_PRV  &bt BT_NXT  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans      &trans      &trans  &bt BT_CLR_ALL
                        &trans  &trans  &to 0   &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
